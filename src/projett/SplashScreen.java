/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projett;     

import java.awt.HeadlessException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;

/**
 *
 * @author Fabrice
 */
public class SplashScreen extends javax.swing.JFrame {

    /**
     * Creates new form SplashScreen
     */
    public SplashScreen() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        
        
    }

    public SplashScreen(JLabel TexteHk, JLabel armoirie, JLabel chargementText, JPanel conteneurArmoirie, JLabel pourcentage, JProgressBar progressBar) throws HeadlessException {
        this.TexteHk = TexteHk;
        this.armoirie = armoirie;
        this.chargementText = chargementText;
        this.conteneurArmoirie = conteneurArmoirie;
        this.pourcentage = pourcentage;
        this.progressBar = progressBar;
       
    }
    
     public static void  splascreenGestion(){
        SplashScreen splashScreen = new SplashScreen();
        splashScreen.setVisible(true);
        
        try {
            for (int i = 0; i <= 100; i++) {
                Thread.sleep(10);
                splashScreen.pourcentage.setText(i + "%");
                if(i==10){
                    splashScreen.chargementText.setText("Initiamisation des composants...");
                } 
                if(i==30){
                    splashScreen.chargementText.setText("Chargement des composants...");
                } 
                if(i==50){
                    splashScreen.chargementText.setText("Connexion au serveur...");
                } 
                if(i==70){
                    splashScreen.chargementText.setText("Chargement de la base de données...");
                } 
                if(i==80){
                    splashScreen.chargementText.setText("Chargement des modules...");
                } 
                if(i==90){
                    splashScreen.chargementText.setText("Connexion réussie...");
                }
                if(i==95){
                    splashScreen.chargementText.setText("Lancement de l'application...");
                }
                splashScreen.progressBar.setValue(i);
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        splashScreen.setVisible(false);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conteneurArmoirie = new javax.swing.JPanel();
        armoirie = new javax.swing.JLabel();
        TexteHk = new javax.swing.JLabel();
        chargementText = new javax.swing.JLabel();
        pourcentage = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        conteneurArmoirie.setBackground(new java.awt.Color(255, 255, 255));

        armoirie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projett/armoirie.png"))); // NOI18N

        TexteHk.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TexteHk.setText("SERNIE HAUT - KATANGA");

        chargementText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chargementText.setText("Chargement...");

        pourcentage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pourcentage.setText("0%");

        progressBar.setBackground(new java.awt.Color(0, 102, 255));

        javax.swing.GroupLayout conteneurArmoirieLayout = new javax.swing.GroupLayout(conteneurArmoirie);
        conteneurArmoirie.setLayout(conteneurArmoirieLayout);
        conteneurArmoirieLayout.setHorizontalGroup(
            conteneurArmoirieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteneurArmoirieLayout.createSequentialGroup()
                .addGroup(conteneurArmoirieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteneurArmoirieLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chargementText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pourcentage))
                    .addGroup(conteneurArmoirieLayout.createSequentialGroup()
                        .addGroup(conteneurArmoirieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(conteneurArmoirieLayout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(TexteHk))
                            .addGroup(conteneurArmoirieLayout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addComponent(armoirie)))
                        .addGap(0, 156, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        conteneurArmoirieLayout.setVerticalGroup(
            conteneurArmoirieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteneurArmoirieLayout.createSequentialGroup()
                .addComponent(armoirie, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TexteHk, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conteneurArmoirieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chargementText)
                    .addComponent(pourcentage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(conteneurArmoirie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(conteneurArmoirie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        // splascreenGestion();
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SplashScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TexteHk;
    private javax.swing.JLabel armoirie;
    private javax.swing.JLabel chargementText;
    private javax.swing.JPanel conteneurArmoirie;
    private javax.swing.JLabel pourcentage;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
